Homework 1

The goal of this coding project is to get you up and running with R,
including
- downloading data files
- installing packages
- reading CSV data into R as a data table
- printing a summary of the number of rows/columns in a data table
- basic data visualization

** Part 1: visualizing image data

Your goal is to write an R script that performs the following steps:

1. use an download.file function to programmatically download a copy
   of the zip.test data set from
   https://web.stanford.edu/~hastie/ElemStatLearn/datasets/zip.test.gz
   (inside of if statement so that the download only happens if the
   file does not yet exist on your system). Make sure the saved file
   has the gz suffix, which is recognized by fread, and indicates that
   the file has been compressed using gzip. This data file represents
   images of handwritten digits, one example per line/row. Each
   example is one of the ten possible digits (as indicated by the
   label in the first column).
2. use data.table::fread to read the compressed CSV data file into R
   as a data table. 
3. Convert the data table to a numeric matrix, which is a more useful
   data structure for clustering algorithms. Make sure to exclude the
   label column (that is the first column).
4. Use utils::str to print a compact representation of the structure
   of your numeric matrix. What is the number of
   rows/observations/example digits? What is the number of
   columns/features/pixels per example?
5. Make a ggplot with geom_tile that visualizes one row from that data
   set.
6. (extra credit) Make a ggplot with facets that visualizes several
   different rows from that data set (as seen in slides from class).

For your homework please upload in bblearn a text file with your code,
the corresponding results/output (after running your R code), and your
commentary/interpretation/answers to questions.

** Part 2: advanced data visualization (CS599 GRAD STUDENTS ONLY)

These are exercises from
https://rcdata.nau.edu/genomic-ml/animint2-manual/Ch02-ggplot2.html
which you should read first (the variable name viz.aligned below
refers to ggplot code on that web page).

1. In viz.aligned we showed a ggplot with a scatterplot panel on the
   left and a time series panel on the right. Make another version of
   the data visualization with the time series panel on the left and
   the scatterplot panel on the right. Hint: the order of panels in
   ggplots is controlled by the factor levels of the facet
   variable. For example facet_grid(. ~ x) means use the different
   values of the x variable in different facets, where x =
   factor(values, levels).
2. In viz.aligned the scatterplot displays fertility rate and life
   expectancy, but the time series displays only fertility rate. Make
   another version of the data visualization that shows both time
   series. There should be only one ggplot that looks something like
   [[https://rcdata.nau.edu/genomic-ml/WorldBank-facets/][this]]. Hint: add another geom_point and use both horizontal and
   vertical panels in facet_grid(row_var ~ col_var).
3. Create a multi-panel data visualization (scatterplot of data for
   one year in each panel) that shows each year of the WorldBank data
   set in a separate panel of one ggplot. Hint: use facet_wrap.

** FAQ

- The web page shows examples using the animint2 package on CRAN,
  which is my fork of ggplot2 that adds interactivity (but the static
  ggplot API is the same in both packages). But animint2 is not on
  CRAN, so to do the homework you need to either (1) use
  remotes::install_github("tdhock/animint2") to download/install
  animint2, or (2) use install.packages("gapminder") to get a
  different copy of the gapminder / WorldBank data set to use with
  ggplot2.
- If you use animint2, just use ggplot etc functions (no need to use
  animint function, but you can if you want).
- how to save figures? save the ggplot object, then use a function
  which starts a graphics device (png, pdf, etc), then print the
  ggplot object, then use dev.off() to close the graphics device (and
  save the ggplot to a file), as in
  [[file:~/teaching/cs499-599-fall-2020/demos/2020-08-21.R]]

